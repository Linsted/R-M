{"version":3,"file":"static/js/193.c6a1f848.chunk.js","mappings":"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","sources":["Api/Api.js","components/CharacterInfo/CharacterInfo.styled.jsx","components/CharacterInfo/CharacterInfo.jsx","components/CharacterInfo/MyLoader.styled.jsx","components/CharacterInfo/MyLoader.jsx","pages/Character.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const  fetchCharacters  = async () => {\n\n    axios.defaults.baseURL = \"https://rickandmortyapi.com/api/character/\";\n    const response = await axios.get(\"\", {\n        \n    });\n    return response;\n\n\n};\n\n\n\n\nexport const  fetchCharacterById  = async (id, abortController) => {\n\n \n    \n    axios.defaults.baseURL = \"https://rickandmortyapi.com/api/character/\";\n    const response = await axios.get(`${id}`, {\n       signal: abortController.signal,\n    });\n  \n    return response;\n\n\n};","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 1020px) {\n        align-items: center;\n    }\n    \n    \n`\nexport const ContainerStyled = styled.div`\n    padding-top: 25px;\n    padding-left: 24px;\n    padding-right: 24px;\n\n    @media(min-width: 1020px){\n        padding-top: 21px;\n    padding-left: 50px;\n    padding-right: 50px;\n    }\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    font-family: 'Karla';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 18px;\nline-height: 1.16;\ntext-transform: uppercase;\ndisplay: flex;\n    align-items: center;\n    transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n\ncolor: #000000;\n\n:hover, :focus {\n    color: red;\n}\n`\nexport const LinkContainerStyled = styled.div`\n    margin-bottom: 73px;\n    @media (min-width: 1020px) {\n        margin-bottom: 26px;\n    }\n`;\n\nexport const IconStyled = styled(AiOutlineArrowLeft)`\n    width: 23px;\n    height: 23px;\n    margin-right: 12px;\n`\nexport const ImageContainerStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 34.5px;\n\n    @media(min-width: 1020px) {\n       margin-bottom: 48px;\n\n    };\n    \n`;\n\nexport const ImageStyled = styled.img`\n    border-radius: 50%;\n    width: 150px;\n    height: 148px;\n    border: 5px solid #F2F2F7;\n    margin-bottom: 29px;\n    @media (min-width: 1020px) {\n        margin-bottom: 16px;\n    }\n\n    @media(min-width: 1020px) {\n        width: 300px;\n    height: 300px;\n    }\n`;\n\nexport const NameStyled = styled.h2`\nfont-weight: 400;\nfont-size: 32px;\nline-height: 1.19;\ncolor: #081F32;\ntext-align: center;\n\n@media(min-width: 1020px) {\n       font-size: 48px;\nline-height: 1.16;\n    }\n\n`;\n\nexport const TitleStyled = styled.h3`\n    font-weight: 500;\nfont-size: 20px;\nline-height: 1.2;\nletter-spacing: 0.15px;\ncolor: #8E8E93;\nmargin-bottom: 25px;\n\n@media(min-width: 1020px) {\n       margin-bottom: 48px;\n    }\n\n`;\n\nexport const ListStyled = styled.ul`\n padding-left: 16px;\n`;\n\nexport const ItemStyled = styled.li`\n  padding-bottom: 12px;\n  padding-top: 9px;\n  position: relative;\n\n  @media(min-width: 1020px) {\n       width: 413px;\n    }\n\n ::after {\n    position: absolute;\n    content: \"\";\n    background: rgba(33, 33, 33, 0.08);\n    height: 1px;\n    width: 298px;\n    top: 61px;\n    left: -3px;\n\n     @media(min-width: 1020px) {\n       width: 395px;\n       left: 1px;\n    }\n }\n`;\n\nexport const ItemTitleStyled = styled.h4`\n font-weight: 700;\nfont-size: 16px;\nline-height: 1.5;\nletter-spacing: 0.15px;\ncolor: #081F32;\n`;\n\nexport const TextTitleStyled = styled.p`\n font-weight: 400;\nfont-size: 14px;\nline-height: 1.43;\nletter-spacing: 0.25px;\ncolor: #6E798C;\n`;","import PropTypes from 'prop-types';\nimport { Container, ImageContainerStyled,ImageStyled,NameStyled,TitleStyled, ItemStyled, ListStyled,ItemTitleStyled,TextTitleStyled } from './CharacterInfo.styled';\n\n\nconst CharacterInfo = ({ character }) => { \n\n    const { image, name, gender, status, species, origin: { name: planet }, type } = character;\n\n     return (\n         <Container>\n             <ImageContainerStyled>\n            <ImageStyled width=\"150\" height=\"148\" src={image} alt=\"\" />\n                 <NameStyled>{name}</NameStyled>\n                 </ImageContainerStyled>\n            <TitleStyled>Informations</TitleStyled>\n        \n            <ListStyled>\n                <ItemStyled>\n                    <ItemTitleStyled>Gender</ItemTitleStyled>\n                    <TextTitleStyled>{gender}</TextTitleStyled>\n                </ItemStyled>\n                <ItemStyled>\n                    <ItemTitleStyled>Status</ItemTitleStyled>\n                    <TextTitleStyled>{status}</TextTitleStyled>\n                </ItemStyled>\n                <ItemStyled>\n                    <ItemTitleStyled>Specie</ItemTitleStyled>\n                    <TextTitleStyled>{species}</TextTitleStyled>\n                </ItemStyled>\n                <ItemStyled>\n                    <ItemTitleStyled>Origin</ItemTitleStyled>\n                    <TextTitleStyled>{planet}</TextTitleStyled>\n                </ItemStyled>\n                <ItemStyled>\n                    <ItemTitleStyled>Type</ItemTitleStyled>\n                    <TextTitleStyled>{type === \"\" ? \"Unknown\" : type}</TextTitleStyled>\n                </ItemStyled>\n            </ListStyled>\n\n        </Container>\n)\n};\n\nexport default CharacterInfo;\n\nCharacterInfo.propTypes = {\n    character: PropTypes.shape({\n        image: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        gender: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        species: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        origin: PropTypes.shape({name: PropTypes.string.isRequired},).isRequired,\n    }).isRequired,\n}","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n    display: flex;\n    justify-content: center;\n`","import { ColorRing } from 'react-loader-spinner'\nimport { WrapperStyled } from './MyLoader.styled';\nimport PropTypes from 'prop-types';\n\nconst MyLoader = ({ loading }) => {\n    \n\n  return (\n    \n    \n    <WrapperStyled>\n    <ColorRing\n  visible={loading}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>\n    </WrapperStyled>)\n}\n\nMyLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n}\n\nexport default MyLoader;","import { useEffect, useState, } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { fetchCharacterById } from \"Api/Api\";\nimport CharacterInfo from \"components/CharacterInfo/CharacterInfo\";\nimport MyLoader from \"components/CharacterInfo/MyLoader\";\nimport { ContainerStyled, LinkStyled, LinkContainerStyled, IconStyled } from \"../components/CharacterInfo/CharacterInfo.styled\";\nimport toast from 'react-hot-toast';\n\n\n\nconst Character = () => { \n\n    \n\n    const [character, setCharacter] = useState();\n    const [loading, setLoading] = useState(true);\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n\n\n\n\n    useEffect(() => {\n    \n        const abortController = new AbortController();\n     const fetchCharacter = async () => {\n        setLoading(true);\n        try {\n            const response = await fetchCharacterById(id,abortController );\n            setLoading(false);\n            setCharacter(response.data);\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n            toast.error('Sorry, an error occurred!');\n         };\n\n    };\n\n        fetchCharacter();\n        return () => { \n            abortController.abort();\n        };\n    }, [id]);\n\n\n\n    return (\n        <ContainerStyled>\n            <LinkContainerStyled>\n                <LinkStyled to={backLinkHref}><IconStyled />Go back</LinkStyled>\n            </LinkContainerStyled>\n            {loading ? <MyLoader loading={loading} /> : <CharacterInfo character={character} />}\n            \n        </ContainerStyled>\n    );\n\n};\nexport default Character;"],"names":["fetchCharacters","axios","response","fetchCharacterById","id","abortController","signal","Container","styled","ContainerStyled","LinkStyled","Link","LinkContainerStyled","IconStyled","AiOutlineArrowLeft","ImageContainerStyled","ImageStyled","NameStyled","TitleStyled","ListStyled","ItemStyled","ItemTitleStyled","TextTitleStyled","character","image","name","gender","status","species","planet","origin","type","width","height","src","alt","WrapperStyled","loading","visible","ariaLabel","wrapperStyle","wrapperClass","colors","useState","setCharacter","setLoading","useParams","backLinkHref","useLocation","state","from","useEffect","AbortController","fetchCharacter","data","console","log","toast","abort","to"],"sourceRoot":""}