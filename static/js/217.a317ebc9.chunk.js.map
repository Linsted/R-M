{"version":3,"file":"static/js/217.a317ebc9.chunk.js","mappings":"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","sources":["Api/Api.js","components/GalleryItem/GalleryItem.styled.jsx","components/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const  fetchCharacters  = async () => {\n\n    axios.defaults.baseURL = \"https://rickandmortyapi.com/api/character/\";\n    const response = await axios.get(\"\", {\n        \n    });\n    return response;\n\n\n};\n\n\n\n\nexport const  fetchCharacterById  = async (id, abortController) => {\n\n    console.log(abortController)\n    \n    axios.defaults.baseURL = \"https://rickandmortyapi.com/api/character/\";\n    const response = await axios.get(`${id}`, {\n       signal: abortController.signal,\n    });\n  \n    return response;\n\n\n};","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const GalleryItemStyled = styled.li`\ndisplay: flex;\nflex-direction: column;\ncolor: black;\ntext-decoration: none;\nmax-width: 312px;\n\nborder-radius: 4px;\nmargin-inline: auto;\nbox-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14);\ntransition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n:hover, :focus-within {\n    transform: scale(1.1);\n}\n\n\n@media(min-width: 361px){\n        \n    \n    max-width: 240px;\n    \n    }\n`;\n\nexport const GalleryImageStyled = styled.img`\nmargin-inline: auto;\nwidth: 312px;\nheight: 232px;\nborder-top-left-radius: 4px;\nborder-top-right-radius: 4px;\n\n@media(min-width: 361px){\n        \n    \n    width: 240px;\n    height: 168px;\n    \n    }\n`;\n\n\n\nexport const LinkStyled = styled(Link)`\ncolor: #000000;\ntext-decoration: none;\nborder-radius: 4px;\n\n`;\n\nexport const ContainerStyled = styled.div`\npadding: 12px 16px;\n\n`;\n\nexport const NameStyled = styled.h2`\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.5;\nletter-spacing: 0.15px;\ncolor: rgba(0, 0, 0, 0.87);\nmargin-bottom: 1px;\n\n`;\n\nexport const SpecieStyled = styled.p`\nfont-weight: 400;\nfont-size: 14px;\nline-height: 1.5;\nletter-spacing: 0.25px;\ncolor: rgba(0, 0, 0, 0.6);\n\n`;","import PropTypes from 'prop-types';\nimport { GalleryImageStyled, GalleryItemStyled, LinkStyled,ContainerStyled,NameStyled, SpecieStyled } from './GalleryItem.styled';\nimport {  useLocation } from \"react-router-dom\";\n\nconst GalleryItem = ({ characters }) => {\n    const location = useLocation();\n\n\n     \n\n    return (\n        \n        characters.length > 0 && characters.map(character => <GalleryItemStyled key={character.id}><LinkStyled to={`/characters/${character.id}`} state={{ from: location }}>\n            <GalleryImageStyled src={character.image} alt={character.name} />\n            <ContainerStyled><NameStyled>{character.name}</NameStyled><SpecieStyled>{character.species}</SpecieStyled></ContainerStyled></LinkStyled></GalleryItemStyled>)\n    );\n};\n\nGalleryItem.propTypes = {\n    characters: PropTypes.arrayOf(PropTypes.object.isRequired,).isRequired,\n};\n\nexport default GalleryItem;\n","import styled from '@emotion/styled';\n\nexport const GalleryStyled = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    @media(min-width: 1020px){\n        margin-inline: auto;\n    max-width: 1020px;\n    \n    }\n    \n\n    @media(max-width: 360px){\n        \n    flex-direction: column;\n    gap: 32px;\n    \n    }\n\n    @media(min-width: 1020px){\n        \n    \n    gap: 20px;\n    \n    }\n\n`;","import  GalleryItem  from \"components/GalleryItem/GalleryItem\";\nimport PropTypes from 'prop-types';\nimport { GalleryStyled } from \"./Gallery.styled\";\n\n\n\n\n const Gallery = ({characters}) => { \n\n    return (\n        <GalleryStyled> \n            <GalleryItem characters={characters} />\n        </GalleryStyled>\n    )\n};\n\nGallery.propTypes = {\n    characters: PropTypes.arrayOf(PropTypes.object.isRequired,).isRequired,\n};\n\nexport default Gallery;\n","import styled from '@emotion/styled';\n\nexport const ErrorContainerStyled = styled.div`\n    display: flex;\n    justify-content: center;\n`","import errorImg from \"../../img/Error.jpg\";\nimport { ErrorContainerStyled } from \"./Error.styled\";\n\n const Error = () => {\n\n    return (\n        <ErrorContainerStyled>\n            <img src={errorImg} alt=\"Error\" />\n\n            \n        </ErrorContainerStyled>\n    )\n};\n\nexport default Error;","import styled from '@emotion/styled';\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nexport const ContainerStyled = styled.div`\n     display: flex; \n     justify-content: center; \n    position: relative;\n    margin-bottom: 32px;\n    margin-inline: auto;\n    max-width: 312px;\n    \n\n      @media(min-width: 1020px){\n        \n            max-width: 1020px;\n            margin-bottom: 61px;\n            \n    \n    \n    }\n\n`\n\nexport const InputStyled = styled.input`\n    box-sizing: border-box;\n    width: 312px;\n    height: 56px;\n    padding: 0px;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n    outline: none;\n    padding-left: 48px;\n    transition: border 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        @media(min-width: 1020px){\n        \n            width: 1020px;\n    \n    \n    }\n\n    :hover, :focus {\n        border: 1.5px solid rgb(0, 179, 196);\n    }\n\n    ::placeholder{\n        font-family: 'Roboto';\n\nfont-weight: 400;\nfont-size: 16px;\nline-height: 1.5;\ncolor: rgba(0, 0, 0, 0.5);\n    };\n\n    \n\n`;\n\nexport const IconStyled = styled(AiOutlineSearch)`\n    position: absolute;\n    top: 14px;\n    left: 20px;\n    color: rgba(0, 0, 0, 0.54);\n    width: 22px;\n    height: 22px;\n`","\nimport PropTypes from 'prop-types';\nimport { InputStyled, ContainerStyled, IconStyled } from './SearchForm.styled';\n\n\n\n     \n\nconst SearchForm = ({ onFilter, filter }) => {\n \n     return (\n         <ContainerStyled>\n             <IconStyled />\n             <InputStyled type=\"text\" name='filter' onChange={onFilter} value={filter} placeholder=\"Filter by name...\" />\n         </ContainerStyled>\n     );\n};\n\n\nSearchForm.propTypes = {\n    onFilter: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired,\n};\n\nexport default SearchForm;\n\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 32px;\n\n    @media(min-width: 361px){\n      margin-bottom: 16px;  \n    \n    gap: 24px;\n    \n    }\n`;","import ImgM312px from \"../../img/Header_img_mobile.jpg\";\nimport ImgM624px_2x from \"../../img/Header_img_mobile@2x.jpg\";\nimport ImgD600px from \"../../img/Header_img_desktop.jpg\";\nimport ImgD1200px_2x from \"../../img/Header_img_desktop@2x.jpg\";\nimport { HeaderStyled } from \"./Header.styled\";\n\n\n const Header = () => { \n\n    return (\n        \n        <HeaderStyled>\n            <picture>\n                <source srcSet={`${ImgD600px} 600w, ${ImgD1200px_2x} 1200w`} media=\"(min-width: 361px)\" sizes=\"(min-width: 600px) 600px\" type=\"image/jpeg\" />\n                <source srcSet={`${ImgM312px} 312w, ${ImgM624px_2x} 624w`} media=\"(min-width: 360px)\" sizes=\"(min-width: 360px) 312px\" type=\"image/jpeg\" />\n                <img src={ImgD600px} alt=\"Rick and Morty poster\" />\n            </picture>\n    </HeaderStyled>);\n    \n};\n\nexport default Header;","import { useEffect, useState } from \"react\";\nimport * as API from \"../Api/Api\"\nimport toast, { Toaster } from 'react-hot-toast';\nimport Gallery from \"../components/Gallery/Gallery\";\nimport Error from \"../components/Error/Error\";\nimport SearchForm from \"../components/SearchForm/SearchForm\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport Header from \"../components/Header/Header\";\n\n\n\n\n\n\nconst Home = () => {\n\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") === null ? \"\" : searchParams.get(\"query\");\n  const [characters, setCharacters] = useState([]);\n  const [error, setError] = useState(false);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [firstLoading, setFirstLoading] = useState(false);\n  \n \n  \n  useEffect(() => {\n    setError(false);\n    const fetchData = async () => {\n      let sorted;\n      \n      try {\n        const data = await API.fetchCharacters();\n        sorted = [...data.data.results];\n        sorted.sort((a, b) => a.name.localeCompare(b.name));\n      } catch (error) {\n        console.log(error);\n        return toast.error('Sorry, an error occurred!');\n      };\n      sorted.sort((a, b) => a.name.localeCompare(b.name));\n      \n      setCharacters(sorted);\n    };\n\n    fetchData();\n  }, []);\n\n\n\n  useEffect(() => {\n    const normalizedRequest = query.trim().toLowerCase();\n    setFilteredCharacters(characters.filter(character => character.name.toLowerCase().includes(normalizedRequest)))\n  }, [characters, query]);\n\n   \n\n\n  useEffect(() => {\n    if (firstLoading && query.length !== 0 && filteredCharacters.length === 0) { setError(true) };\n    return (() => {\n      setError(false);\n      setFirstLoading(true);\n    })\n\n  }, [query, filteredCharacters, firstLoading]);\n\n  const filterForm = (evt) => setSearchParams({ query: evt.target.value });\n\n  return (<>\n    <Link to=\"/\"> <Header /></Link>\n    <SearchForm\n      onFilter={filterForm}\n      filter={query} />\n    {error && <Error />}\n    <Gallery characters={filteredCharacters} />\n    <Toaster />\n    \n  </>);\n\n     \n};\n\nexport default Home;"],"names":["fetchCharacters","axios","response","fetchCharacterById","id","abortController","console","log","signal","GalleryItemStyled","styled","GalleryImageStyled","LinkStyled","Link","ContainerStyled","NameStyled","SpecieStyled","characters","location","useLocation","length","map","character","to","state","from","src","image","alt","name","species","GalleryStyled","ErrorContainerStyled","errorImg","InputStyled","IconStyled","AiOutlineSearch","onFilter","filter","type","onChange","value","placeholder","HeaderStyled","srcSet","ImgD600px","ImgD1200px_2x","media","sizes","ImgM312px","ImgM624px_2x","useSearchParams","searchParams","setSearchParams","query","get","useState","setCharacters","error","setError","filteredCharacters","setFilteredCharacters","firstLoading","setFirstLoading","useEffect","fetchData","API","data","sorted","results","sort","a","b","localeCompare","toast","normalizedRequest","trim","toLowerCase","includes","evt","target"],"sourceRoot":""}